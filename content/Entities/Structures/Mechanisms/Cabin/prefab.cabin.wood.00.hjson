$name: "Cabin (Wood)"
$desc:
	'''
	Small lightweight wooden cabin.
	'''
$tags: []

body:
{
	inventory_weight_multiplier: 0.250
	fall_damage_multiplier: 0.600

	@shape.polygon:	
	{
		points: 
		[
			[-1.000, -1.000]
			[0.750, -1.000]
			[1.000, 1.375]
			[-1.125, 1.375]
		]
		radius: 0.250
		mass: 85.000
		friction: 0.750
		elasticity: 0.500
		material: wood
		layer: entity, solid, flammable
		mask: world
	}
}

health:
{
	max: 19500.000
}

damage.effects:
{
	threshold_wreck: 0.400
}

holdable:
{
	force_multiplier: 1.100
	torque_multiplier: 1.000
	stress_multiplier: 0.500
	offset: [0.000, 0.000]
	radius: 0.000
	flags: disable_parent_facing, disable_rotation, disable_control
}

attachment:
{
	offset: [0.000, 1.500]
	tags: medium, cabin, fixed
}

animated.renderer:
{
	sprite:
	{
		texture: "cabin.wood.00.fg"
	}
	offset: [0.000, 0.000]
	z: 70.000
}

vehicle:
{
	@animated.renderer:
	{
		sprite:
		{
			texture: "cabin.wood.00.bg"
		}
		z: -100.000
	}
}

transform:
{

}

interactable:
{
	window_size: [336.000, 336.000]
	// window_offset: [0.000, 192.000]
	priority: 3.000
}

control:
{

}

// rotograph:
// {

// }

// axle:
// {
// 	offset: [0.000, -1.000]
// 	offset_inner: [0.000, 0.000]
// 	mass: 20.000
// 	friction: 0.500
// 	modifier: 1.000
// 	ratio: 1.000
// 	radius_a: 1.000
// 	radius_b: 1.000
// 	radius_inner: 0.000
// 	radius_outer: 1.000
// 	z: 200.000
	
// 	@animated.renderer:
// 	{
// 		sprite:
// 		{
// 			texture: "wheel_1000.steel"
// 		}
// 		z: -140.000
// 	}

// 	// @sound.emitter:
// 	// {
// 	// 	file: "shaft.loop.overload.00"
// 	// 	volume: 1.000
// 	// 	pitch: 1.000
// 	// }
// }

// rotato:
// {
// 	binds:
// 	[
// 		{
// 			key: moveup
// 			torque: 200.000
// 			angular_velocity: 20.000
// 			flags: none
// 		}
// 		{
// 			key: moveright
// 			torque: 50.000
// 			angular_velocity: 10.000
// 			flags: none
// 		}
// 		{
// 			key: moveleft
// 			torque: 100.000
// 			angular_velocity: -5.000
// 			flags: none
// 		}
// 		{
// 			key: none
// 			torque: 200.000
// 			angular_velocity: 0.000
// 			flags: toggle
// 		}
// 		{
// 			key: none
// 			torque: 0.000
// 			angular_velocity: 0.000
// 			flags: none
// 		}
// 		{
// 			key: none
// 			torque: 0.000
// 			angular_velocity: 0.000
// 			flags: none
// 		}
// 		{
// 			key: none
// 			torque: 0.000
// 			angular_velocity: 0.000
// 			flags: none
// 		}
// 		{
// 			key: none
// 			torque: 0.000
// 			angular_velocity: 0.000
// 			flags: none
// 		}
// 	]
// }

// rotato:
// {
// 	binds:
// 	[
// 		{
// 			key: moveup
// 			torque: 200.000
// 			angular_velocity: 20.000
// 			flags: none
// 		}
// 		{
// 			key: moveright
// 			torque: 200.000
// 			angular_velocity: 10.000
// 			flags: none
// 		}
// 		{
// 			key: moveleft
// 			torque: 200.000
// 			angular_velocity: -10.000
// 			flags: none
// 		}
// 		{
// 			key: none
// 			torque: 200.000
// 			angular_velocity: 0.000
// 			flags: toggle
// 		}
// 		{
// 			key: none
// 			torque: 0.000
// 			angular_velocity: 0.000
// 			flags: none
// 		}
// 		{
// 			key: none
// 			torque: 0.000
// 			angular_velocity: 0.000
// 			flags: none
// 		}
// 		{
// 			key: none
// 			torque: 0.000
// 			angular_velocity: 0.000
// 			flags: none
// 		}
// 		{
// 			key: none
// 			torque: 0.000
// 			angular_velocity: 0.000
// 			flags: none
// 		}
// 	]
// }

// analog.relay:
// {

// }

// analog.transducer:
// {
// 	binds:
// 	[
// 		{
// 			keys_positive: moveup
// 			keys_negative: movedown
// 			gain: 1.000
// 			ramp: 1.000
// 			decay: 1.000
// 			blend: 1.000
// 			offset: 0.000
// 		}
// 		{
// 			keys_positive: none
// 			keys_negative: none
// 			gain: 0.000
// 			ramp: 0.000
// 			decay: 0.000
// 			blend: 0.000
// 			offset: 0.000
// 		}
// 		{
// 			keys_positive: none
// 			keys_negative: none
// 			gain: 0.000
// 			ramp: 0.000
// 			decay: 0.000
// 			blend: 0.000
// 			offset: 0.000
// 		}
// 		{
// 			keys_positive: none
// 			keys_negative: none
// 			gain: 0.000
// 			ramp: 0.000
// 			decay: 0.000
// 			blend: 0.000
// 			offset: 0.000
// 		}
// 	]
// 	flags: none
// }

+seat|instance:
{
	$tags: []
	
	seat:
	{
		flags: covered, open
		offset: [0.125, 0.250]
		max_tilt: 5.000
	}
}

+slot_device|instance:
{
	joint.base:
	{
		offset_a: [0.000, -1.000]
		max_force: 100000.000
		max_torque: 100000.000
		max_stress: 3.000
		stress_threshold: 3.010
		z: -10.000
		flags: no_aiming, no_wrap, attachment, allow_dragging, control_write, control_read, facing_reset_rot, force_facing, use_proxy_body
		material_type: metal
	}

	joint.pivot:
	{
		max_bias: 8.000
	}

	joint.gear:
	{
		min: 0.000
		max: 0.000
		error_bias: 0.0001
		max_bias: 0.350
	}

	attachment.slot:
	{
		radius: 1.000
		flags: keyboard_write, mouse_write
		flags_editable: locked, disabled, invert, keyboard_write, mouse_write, keyboard_read, mouse_read, offset
		name: "Device"
		identifier: "device"
		gui_size: [120.000, 120.000]
		offset_bounds: [-0.500, -0.250, 0.500, 0.250]
	}

	// analog.writer:
	// {
	// 	mask_read: none
	// 	mask_write: red, green, blue, yellow
	// }
}