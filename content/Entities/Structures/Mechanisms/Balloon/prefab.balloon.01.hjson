$name: "Hot-Air Balloon (Heavy)"
$desc:
	'''
	Armored hot-air balloon with 3 device attachment slots.
	'''
$tags: []

body:
{
	inventory_weight_multiplier: 0.750
	fall_damage_multiplier: 0.600

	@shape.polygon:
	{
		points: 
		[
			[3.375, 0.500]
			[-3.375, 0.500]
			[-4.500, -0.500]
			[4.500, -0.500]
		]
		mass: 750.000
		radius: 0.100
		friction: 0.750
		elasticity: 0.650
		material: metal_frame
		layer: entity, solid, vehicle, platform
		mask: world, solid
		exclude: tree, wheel, attached
	}
}

health:
{
	max: 35000.000
}

armor:
{
	toughness: 800.000
	protection: 0.750
	coverage: 0.500
	
	knockback_modifier: 1.300
	pain_modifier: 0.000

	material_type: metal
	flags: no_damage_type_conversion
}

animated.renderer:
{
	sprite:
	{
		texture: "balloon.bottom.01"
		size: [80, 32]
	}
	flags: has_damage
	z: 100.000
}

damage.effects:
{
	frame_count: 7
}

control:
{

}

transform:
{

}

vehicle:
{

}

holdable:
{
	flags: disable_parent_facing, disable_rotation, disable_control
}

faction:
{

}

threat:
{
	priority: 20.000
	self_hints: can_fly, can_hold_items, can_use_items, can_use_guns, has_armor, is_armored, is_dangerous, is_vehicle, is_loud
	item_hints: armor, weapon, vehicle, heavy, long_range, advanced, powerful, machine, defensive, inaccurate, device, expensive, military, industrial, tech, slow
}

claimable:
{
	flags: none
}

norotate:
{
	rotation: 0.000
	bias: 0.300
	speed: 1.000
	multiplier: 1.000
	mass_multiplier: 2.000
}

storage:
{
	@inventory8:
	{
		flags: standalone
		stack_size_multiplier: 4.000
		layout: horizontal
		type: storage
	}
}

interactable:
{
	priority: 2.000
	window_size: [224.000, 256.000]
	window_size_misc: [216.000, 0.000]
	flags: centered_inventory
}

sound.emitter|"aux":
{
	file: "burner.gas.loop.02"
	flags: start_muted
	volume: 0.300
	pitch: 0.500
	size: 1.000
	size_max_modifier: 0.500
}

air.vent|"exhaust":
{
	type: output
	flags: no_gui
	offset: [0.000, -4.500]
	rotation: -1.571
	cross_section: 2.000
}

air.vent|"intake":
{
	type: input
	flags: no_gui
	offset: [-0.125, 0.625]
	rotation: 1.571
	cross_section: 2.000
}

air.container:
{
	volume: 1.000
}

burner:
{
	flags: open_air
	type: gas
	height: 8.000
	area_fuel: 0.500
	area_aux: 0.020
	area_surface: 1.000
	volume_chamber: 0.500
	pressure_max: 8.000
	temperature_max: 2200.000
	insulation: 0.000
	airtightness: 0.000
	valve_strength: 3.000

	@sound.emitter:
	{
		file: "balloon.burner.loop.00"
		flags: start_muted
		volume: 0.500
		pitch: 0.550
		size: 0.800
	}

	@animated.renderer:
	{
		sprite:
		{
			texture: "balloon.burner.00"
		}
		offset: [0.000, -2.875]
		z: -50.000
	}
}

burner.state:
{
	current_temperature: 300.000

	@inventory1:
	{
		stack_size_multiplier: 4.000
		filter_flags: fuel
		filter_type: liquid
		type: fuel
		flags: ignore_mass
		offset: [-0.250, 1.125]
	}
}

+slot.cab|instance:
{
	joint.base:
	{
		offset_a: [0.000, 0.250]
		max_force: 10000000.000
		max_torque: 2000000.000
		flags: control_read, no_wrap, force_facing, attachment, use_proxy_body
		z: -40.000
		material_type: metal
	}

	joint.pivot:
	{
		error_bias: 0.0001
		max_bias: 20.000
	}

	joint.gear:
	{
		error_bias: 0.00001
		max_bias: 10.000
		min: 0.000
		max: 0.000
	}

	attachment.slot:
	{
		name: "Cabin Mount"
		identifier: "cabin"

		flags: keyboard_read, mouse_read
		flags_editable: locked, disabled, offset

		rank: -10.000
		gui_size: [224.000, 120.000]
		offset_bounds: [-0.500, -0.500, 0.500, 0.500]
	}
}

+slot.left|instance:
{
	joint.base:
	{
		offset_a: [-3.750, 0.125]
		max_force: 400000.000
		max_torque: 80000.000
		flags: attachment, allow_dragging, control_write, facing_reset_rot, facing_reset_pos, force_facing, mirror_x
		z: 75.000
		material_type: metal
	}

	joint.piston:
	{
		error_bias: 0.000
		max_bias: 8.000
		stiffness: 40000.000
		damping: 1500.000
		axis_force: 400000.000
		spring_max_bias: 8.000
		max_distance: 2.000
		rotation: 0.000
		stress_mult_axis: 1.000
	}

	joint.gear:
	{
		error_bias: 0.001
		max_bias: 5.000
		min: 0.000
		max: 0.000
	}

	attachment.slot:
	{
		name: "Mount (Left)"
		identifier: "left"

		flags: keyboard_write, mouse_write, hold
		flags_editable: locked, disabled, hold, invert, cycle, keyboard_read, mouse_read, keyboard_write, mouse_write, offset, rotation, brake

		rank: 4.000
		gui_size: [112.000, 72.000]
		offset_bounds: [0.000, -0.250, 0.000, 0.500]
	}

	facing:
	{
		flags: use_rotation
		offset: 0.000
		threshold: 0.050
		flip_interval: 0.500
	}
}

+slot.right|instance:
{
	joint.base:
	{
		offset_a: [3.750, 0.125]
		max_force: 400000.000
		max_torque: 80000.000
		flags: attachment, allow_dragging, control_write, facing_reset_rot, facing_reset_pos, force_facing
		z: 75.000
		material_type: metal
	}

	joint.piston:
	{
		error_bias: 0.000
		max_bias: 8.000
		stiffness: 40000.000
		damping: 1500.000
		axis_force: 400000.000
		spring_max_bias: 8.000
		max_distance: 2.000
		rotation: 0.000
		stress_mult_axis: 1.000
	}

	joint.gear:
	{
		error_bias: 0.001
		max_bias: 5.000
		min: 0.000
		max: 0.000
	}

	attachment.slot:
	{
		name: "Mount (Right)"
		identifier: "right"

		flags: keyboard_write, mouse_write, hold
		flags_editable: locked, disabled, hold, invert, cycle, keyboard_read, mouse_read, keyboard_write, mouse_write, offset, rotation, brake

		rank: 5.000
		gui_size: [112.000, 72.000]
		offset_bounds: [0.000, -0.250, 0.000, 0.500]
	}

	facing:
	{
		flags: use_rotation
		offset: 0.000
		threshold: 0.050
		flip_interval: 0.500
	}
}

+slot.bottom|instance:
{
	joint.base:
	{
		offset_a: [0.000, 0.750]
		max_force: 850000.000
		max_torque: 150000.000
		max_stress: 3.000
		stress_threshold: 3.010
		stress_damp: 0.500
		z: -100.000
		material_type: metal
		stress: 0.000
		flags: attachment, allow_dragging, control_read, control_write, force_facing
	}

	joint.gear:
	{
		error_bias: 0.001
		max_bias: 5.000
		min: 0.000
		max: 0.000
		stress_mult: 0.500
	}

	joint.piston:
	{
		error_bias: 0.000
		max_bias: 4.000
		stiffness: 40000.000
		damping: 1250.000
		axis_force: 800000.000
		spring_max_bias: 4.000
		max_distance: 1.500
		rotation: 1.5707
		stress_mult_axis: 1.000
	}

	attachment.slot:
	{
		name: "Mount (Mid)"
		identifier: "bottom"

		flags: keyboard_write, mouse_write
		flags_editable: locked, disabled, hold, invert, cycle, keyboard_read, mouse_read, keyboard_write, mouse_write, offset, rotation, brake

		rank: 10.000
		gui_size: [224.000, 64.000]
		offset_bounds: [0.000, -0.750, 0.000, 0.500]
	}
}

+slot.balloon|instance:
{
	$tags: []
	
	joint.base:
	{
		offset_a: [0.000, -1.375]
		offset_b: [0.000, 4.250]
		max_force: 300000.000
		max_torque: 20000.000
		material_type: fabric
		flags: no_stress
	}
	
	joint.dualrope:
	{
		error_bias: 0.010
		max_bias: 1.000
		distance_min: 0.000
		distance_max: 4.000
		gap_a: 3.625
		gap_b: 1.500
	}
	
	// joint.gear:
	// {
	// 	error_bias: 0.050
	// }
	
	ropetest:
	{
		texture: "rope"
		thickness: 0.175
		scale: 6.000
	}
		
	+balloon|child:
	{
		$prefab: "balloon.envelope.00"
	}
}