$name: "Clutch"
$desc:
	'''
	Toggles mechanical power transmission on/off.

	Many hands were lost to this device.
	'''
$tags: []

body:
{
	type: static

	@shape.box:
	{
		size: [1.375, 2.750]
		offset: [0.000, 0.000]
		friction: 0.500
		elasticity: 0.500
		material: machine
		mass: 45.000
		layer: entity, building, no_overlapped_placement
		mask: world
	}
}

health:
{
	max: 20000.000
}

animated.renderer:
{
	sprite:
	{
		texture: "clutch.01.bg"
	}
	z: -150.000
}

axle:
{
	offset: [0.000, -0.750]
	mass: 10.000
	friction: 0.400
	radius_a: 0.500
	radius_b: 0.500
	radius_inner: 0.500
	radius_outer: 0.500
	z: -140.000
	
	@animated.renderer:
	{
		sprite:
		{
			texture: "wheel_0500.steel"
		}
		z: -140.000
	}
}

clutch:
{
	offset_enabled: [0.000, 0.000]
	offset_disabled: [0.000, 0.500]

	speed: 0.250

	sound_enable: "lever.bell.00"
	sound_disable: "lever.bell.01"

	@animated.renderer:
	{
		sprite:
		{
			texture: "clutch.01.fg"
			size: [16, 32]
		}
		z: -100.000
	}
}

lamp:
{
	flicker: 0.100
	
	@light:
	{
		color: [1.000, 0.450, 0.000, 2.500]
		offset: [0.000, -1.250]
		scale: [10.000, 10.000]
		intensity: 1.000
		texture: "light.circle.00"
	}
}

transform:
{

}

interactable:
{
	flags: no_tab, centered_inventory
	window_size: [200.000, 192.000]
	window_size_misc: [64.000, 0.000]
	window_offset: [-112.000, -24.000]
}

module.slots:
{
	slot_type: motor
	offset: [-0.125, -0.375]
	z: 100.000
}

vehicle:
{

}

control:
{

}

analog.relay:
{

}

+slot.device.00|instance:
{
	joint.base:
	{
		offset_a: [0.000, -1.250]
		max_force: 100000.000
		max_torque: 100000.000
		max_stress: 3.000
		stress_threshold: 1.500
		z: -10.000
		material_type: metal
		flags: no_aiming, no_wrap, attachment, control_read, use_proxy_body
	}

	joint.pivot:
	{
		max_bias: 8.000
	}

	joint.gear:
	{
		min: 0.000
		max: 0.000
		error_bias: 0.0000
		max_bias: 1.250
	}

	attachment.slot:
	{
		flags: keyboard_read, mouse_read, brake
		flags_editable: locked, disabled, keyboard_read, mouse_read
		name: "Device"
		identifier: "device.00"
		tags_filter:
		{
			include: tiny, small, utility, fixed
			exclude: cabin, wheel, platform
		}
		rank: 1.000
		gui_size: [144.000, 120.000]
	}

	analog.writer:
	{

	}
}